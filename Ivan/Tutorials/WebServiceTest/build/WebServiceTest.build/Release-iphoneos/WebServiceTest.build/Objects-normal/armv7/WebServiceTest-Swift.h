// Generated by Apple Swift version 1.2 (swiftlang-602.0.53.1 clang-602.0.53)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
#if __has_feature(nullability)
#  define SWIFT_NULLABILITY(X) X
#else
# if !defined(__nonnull)
#  define __nonnull
# endif
# if !defined(__nullable)
#  define __nullable
# endif
# if !defined(__null_unspecified)
#  define __null_unspecified
# endif
#  define SWIFT_NULLABILITY(X)
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class UIApplication;
@class NSObject;

SWIFT_CLASS("_TtC14WebServiceTest11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic) UIWindow * __nullable window;
- (BOOL)application:(UIApplication * __nonnull)application didFinishLaunchingWithOptions:(NSDictionary * __nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * __nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * __nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * __nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * __nonnull)application;
- (void)applicationWillTerminate:(UIApplication * __nonnull)application;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSArray;
@class NSError;
@class UIActivityIndicatorView;
@class NSBundle;
@class NSCoder;


/// The begining screen. Users can start to download the data from here.
SWIFT_CLASS("_TtC14WebServiceTest27UIBeginScreenViewController")
@interface UIBeginScreenViewController : UIViewController

/// Activity which runs while we get the data
@property (nonatomic, weak) IBOutlet UIActivityIndicatorView * __null_unspecified activity;

/// Array of data that was given from the 'WebServiceHandler'
@property (nonatomic) NSArray * __nonnull data;

/// Calls the super viewDidLoad and init the activity indicator.
- (void)viewDidLoad;

/// Calls the super function.
- (void)didReceiveMemoryWarning;

/// Function that is invoked when the button is pressed. It starts the animation and call the web service.
///
/// \returns nothing
- (IBAction)buttonPressed:(id __nonnull)sender;

/// Function that is send as a completion handler to handel the data got from the web.
///
/// \param data array of data that was parsed with JSON.
///
/// \param error error that we might get while downloading the data.
///
/// \returns returns Void
- (void)getData:(NSArray * __nonnull)data error:(NSError * __nullable)error;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSIndexPath;
@class UITableViewCell;


/// The view controller for the comment view, which shows the comments of a specific post.
SWIFT_CLASS("_TtC14WebServiceTest23UICommentViewController")
@interface UICommentViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>

/// the array of comments
@property (nonatomic, weak) NSArray * __nullable comments;

/// the table in which we put the comments
@property (nonatomic, weak) IBOutlet UITableView * __null_unspecified table;

/// Calls the super method and inits the table.
- (void)viewDidLoad;

/// Calls the super method.
- (void)didReceiveMemoryWarning;

/// Function for the number of rows in a section.
/// :param: tableView The view we are on.
/// :param: section The index of the section.
/// :returns: The number of comments in the comments array.
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;

/// The function which builds a cell depending on the index.
/// :param: tableView The table we are on.
/// :param: indexPath The index for the cell.
/// :returns: A cell populated depending on the index, which represents the index in the comments array.
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;


/// The class which handels the comment cells.
SWIFT_CLASS("_TtC14WebServiceTest23UICommentsTableViewCell")
@interface UICommentsTableViewCell : UITableViewCell

/// comment label for the comment
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified commentLabel;
- (void)awakeFromNib;

/// Calls the super method.
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// The class which shows information about the posts in a cell.
SWIFT_CLASS("_TtC14WebServiceTest10UIDataCell")
@interface UIDataCell : UITableViewCell

/// The label for the username.
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified UserCell;

/// the label for the title.
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified titleLabel;

/// the label in which comes the text from the short.
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified shortLabel;

/// the label which states the number of comments for this post.
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified commentsLabel;
- (void)awakeFromNib;

/// sets the data for each label from the 'data' variable.
- (void)setData;

/// Calls the super method.
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIStoryboardSegue;


/// The class which handles the information shown on the table view about the posts.
SWIFT_CLASS("_TtC14WebServiceTest25UIDataTableViewController")
@interface UIDataTableViewController : UITableViewController

/// the data from different posts, not parsed
@property (nonatomic) NSArray * __nonnull data;

/// the parsed array data
@property (nonatomic, copy) NSArray * __nonnull userData;

/// aray of users
@property (nonatomic) NSArray * __nullable user;

/// Calls the super method and registers the cell for the post data.
- (void)viewDidLoad;

/// Refreshing the data when the user puls the table.
///
/// \param sender The refresh method(pull)
- (IBAction)refresh:(id __nonnull)sender;

/// Procces the data from the request.
///
/// \param data Raw data got from the web service get method.
///
/// \param error The error which we handle from the get method.
///
/// \returns Void
- (void)getData:(NSArray * __nonnull)data error:(NSError * __nullable)error;

/// Updates the table with new data.
- (void)update;

/// Calls the super method.
- (void)didReceiveMemoryWarning;

/// <blockquote><p>Returns 1 , the number of Sections is static to only one</p></blockquote>
/// \returns 1
- (NSInteger)numberOfSectionsInTableView:(UITableView * __nonnull)tableView;

/// Returns how many rows will be in the Section.
/// :returns: The count of data which is an array.
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;

/// Creates a new cell with data related to the number in the row of that cell.
/// :param: tableView The table we are on.
/// :param: indexPath The index of the cell.
/// :returns: New cell with data relative to the indexPath.
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;

/// Activates when the user selects a cell. The view moves to a new one which has the info about the comments from this cell/post. If the number of comments is 0, the view stays the same.
/// :param: tableView The table we are on.
/// :param: indexPath The index of the selected cell.
- (void)tableView:(UITableView * __nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;

/// Prepares for the segue, sets the comments of the next view.
- (void)prepareForSegue:(UIStoryboardSegue * __nonnull)segue sender:(id __null_unspecified)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithNibName:(NSString * __null_unspecified)nibNameOrNil bundle:(NSBundle * __null_unspecified)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithCoder:(NSCoder * __null_unspecified)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
